/* Keyframe Animations */
@include keyframes(wrapper) {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@include keyframes(overlay) {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@include keyframes(header) {
  0% {
    transform: translate3d(0,1em,0);
    opacity: 0;
  }
  100% {
    transform: translate3d(0,0,0);
    opacity: 1;
  }
}

@include keyframes(nav-icons) {
  0% {
    transform: translate3d(0,1em,0);
    opacity: 0;
  }
  100% {
    transform: translate3d(0,0,0);
    opacity: 1;
  }
}

@include keyframes(bounce) {
  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
  40% { transform: translateY(-8px); }
  60% { transform: translateY(-4px); }
}

@include keyframes(fadeInUp) {
  0% {
    opacity: 0;
    transform: translateY(40px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Animation utility classes */
.animated {
  opacity: 0; // Initial state for IntersectionObserver
}

.fadeInUp {
  animation: fadeInUp 1s forwards; // Applied by JS
}

/* Sequential animation delays - can be managed by JS or kept here if structure is fixed */
// These are applied via Intersection Observer in JS, but selectors can live here.
// If you want more dynamic control, manage adding delay classes via JS too.
.content {
  h1.animated { animation-delay: 0.2s; } // Ensure these elements have .animated class
  p.animated:nth-of-type(1) { animation-delay: 0.4s; }
  p.animated:nth-of-type(2) { animation-delay: 0.5s; }
  p.animated:nth-of-type(3) { animation-delay: 0.6s; }
  p.animated:nth-of-type(4) { animation-delay: 0.7s; }
  p.animated:nth-of-type(5) { animation-delay: 0.7s; } // As per original
  ul.animated { animation-delay: 0.6s; } // For .services-list
  .button-container.animated { animation-delay: 0.8s; }
  .contact-form-container.animated { animation-delay: 0.5s; }
}